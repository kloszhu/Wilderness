//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;

using LinqToDB;
using LinqToDB.DataProvider.SqlServer;
using LinqToDB.Extensions;
using LinqToDB.Mapping;

namespace AllTest
{
	/// <summary>
	/// Database       : mydb
	/// Data Source    : .
	/// Server Version : 11.00.2100
	/// </summary>
	public partial class MyDB : LinqToDB.Data.DataConnection
	{
		public ITable<A1>      A1     { get { return this.GetTable<A1>(); } }
		public ITable<A10>     A10    { get { return this.GetTable<A10>(); } }
		public ITable<A11>     A11    { get { return this.GetTable<A11>(); } }
		public ITable<A2>      A2     { get { return this.GetTable<A2>(); } }
		public ITable<A3>      A3     { get { return this.GetTable<A3>(); } }
		public ITable<A4>      A4     { get { return this.GetTable<A4>(); } }
		public ITable<A5>      A5     { get { return this.GetTable<A5>(); } }
		public ITable<A6>      A6     { get { return this.GetTable<A6>(); } }
		public ITable<A7>      A7     { get { return this.GetTable<A7>(); } }
		public ITable<A8>      A8     { get { return this.GetTable<A8>(); } }
		public ITable<A9>      A9     { get { return this.GetTable<A9>(); } }
		public ITable<Artists> Artist { get { return this.GetTable<Artists>(); } }
		public ITable<Pocoes>  Poco   { get { return this.GetTable<Pocoes>(); } }
		public ITable<Tracks>  Track  { get { return this.GetTable<Tracks>(); } }
		public ITable<TTests>  TTest  { get { return this.GetTable<TTests>(); } }

		public void InitMappingSchema()
		{
		}

		public MyDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public MyDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext();

		#region FreeTextTable

		public class FreeTextKey<T>
		{
			public T   Key;
			public int Rank;
		}

		private static MethodInfo _freeTextTableMethod1 = typeof(MyDB).GetMethod("FreeTextTable", new Type[] { typeof(string), typeof(string) });

		[FreeTextTableExpression]
		public ITable<FreeTextKey<TKey>> FreeTextTable<TTable,TKey>(string field, string text)
		{
			return this.GetTable<FreeTextKey<TKey>>(
				this,
				_freeTextTableMethod1,
				field,
				text);
		}

		private static MethodInfo _freeTextTableMethod2 = 
			typeof(MyDB).GetMethods()
				.Where(m => m.Name == "FreeTextTable" &&  m.IsGenericMethod && m.GetParameters().Length == 2)
				.Where(m => m.GetParameters()[0].ParameterType.IsGenericTypeEx() && m.GetParameters()[0].ParameterType.GetGenericTypeDefinition() == typeof(Expression<>))
				.Where(m => m.GetParameters()[1].ParameterType == typeof(string))
				.Single();

		[FreeTextTableExpression]
		public ITable<FreeTextKey<TKey>> FreeTextTable<TTable,TKey>(Expression<Func<TTable,string>> fieldSelector, string text)
		{
			return this.GetTable<FreeTextKey<TKey>>(
				this,
				_freeTextTableMethod2,
				fieldSelector,
				text);
		}

		#endregion
	}

	[Table(Schema="dbo", Name="A1")]
	public partial class A1
	{
		[Column(DbType="int",           DataType=DataType.Int32),                PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column(DbType="varchar(8000)", DataType=DataType.VarChar, Length=8000), Nullable            ] public string Name { get; set; } // varchar(8000)
	}

	[Table(Schema="dbo", Name="A10")]
	public partial class A10
	{
		[Column(DbType="int",           DataType=DataType.Int32),                PrimaryKey,  NotNull] public int    Id   { get; set; } // int
		[Column(DbType="varchar(8000)", DataType=DataType.VarChar, Length=8000),    Nullable         ] public string Name { get; set; } // varchar(8000)
	}

	[Table(Schema="dbo", Name="A11")]
	public partial class A11
	{
		[Column(DbType="int",           DataType=DataType.Int32),                PrimaryKey,  NotNull] public int    Id   { get; set; } // int
		[Column(DbType="varchar(8000)", DataType=DataType.VarChar, Length=8000),    Nullable         ] public string Name { get; set; } // varchar(8000)
	}

	[Table(Schema="dbo", Name="A2")]
	public partial class A2
	{
		[Column(DbType="int",           DataType=DataType.Int32),                PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column(DbType="varchar(8000)", DataType=DataType.VarChar, Length=8000), Nullable            ] public string Name { get; set; } // varchar(8000)
	}

	[Table(Schema="dbo", Name="A3")]
	public partial class A3
	{
		[Column(DbType="int",              DataType=DataType.Int32),                PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column(DbType="varchar(8000)",    DataType=DataType.VarChar, Length=8000), Nullable            ] public string Name { get; set; } // varchar(8000)
		[Column(DbType="uniqueidentifier", DataType=DataType.Guid),                 Nullable            ] public Guid?  Code { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="A4")]
	public partial class A4
	{
		[Column(DbType="int",           DataType=DataType.Int32),                PrimaryKey,  NotNull] public int    Id   { get; set; } // int
		[Column(DbType="varchar(8000)", DataType=DataType.VarChar, Length=8000),    Nullable         ] public string Name { get; set; } // varchar(8000)
	}

	[Table(Schema="dbo", Name="A5")]
	public partial class A5
	{
		[Column(DbType="int",           DataType=DataType.Int32),                PrimaryKey,  NotNull] public int    Id   { get; set; } // int
		[Column(DbType="varchar(8000)", DataType=DataType.VarChar, Length=8000),    Nullable         ] public string Name { get; set; } // varchar(8000)
	}

	[Table(Schema="dbo", Name="A6")]
	public partial class A6
	{
		[Column(DbType="int",           DataType=DataType.Int32),                PrimaryKey,  NotNull] public int    Id   { get; set; } // int
		[Column(DbType="varchar(8000)", DataType=DataType.VarChar, Length=8000),    Nullable         ] public string Name { get; set; } // varchar(8000)
	}

	[Table(Schema="dbo", Name="A7")]
	public partial class A7
	{
		[Column(DbType="int",           DataType=DataType.Int32),                PrimaryKey,  NotNull] public int    Id   { get; set; } // int
		[Column(DbType="varchar(8000)", DataType=DataType.VarChar, Length=8000),    Nullable         ] public string Name { get; set; } // varchar(8000)
	}

	[Table(Schema="dbo", Name="A8")]
	public partial class A8
	{
		[Column(DbType="int",           DataType=DataType.Int32),                PrimaryKey,  NotNull] public int    Id   { get; set; } // int
		[Column(DbType="varchar(8000)", DataType=DataType.VarChar, Length=8000),    Nullable         ] public string Name { get; set; } // varchar(8000)
	}

	[Table(Schema="dbo", Name="A9")]
	public partial class A9
	{
		[Column(DbType="int",           DataType=DataType.Int32),                PrimaryKey,  NotNull] public int    Id   { get; set; } // int
		[Column(DbType="varchar(8000)", DataType=DataType.VarChar, Length=8000),    Nullable         ] public string Name { get; set; } // varchar(8000)
	}

	[Table(Schema="dbo", Name="Artist")]
	public partial class Artists
	{
		[Column(DbType="int",           DataType=DataType.Int32),                PrimaryKey,  NotNull] public int    Id   { get; set; } // int
		[Column(DbType="varchar(8000)", DataType=DataType.VarChar, Length=8000),    Nullable         ] public string Name { get; set; } // varchar(8000)
	}

	[Table(Schema="dbo", Name="Poco")]
	public partial class Pocoes
	{
		[Column(DbType="int",           DataType=DataType.Int32),                PrimaryKey,  NotNull] public int    Id   { get; set; } // int
		[Column(DbType="varchar(8000)", DataType=DataType.VarChar, Length=8000),    Nullable         ] public string Name { get; set; } // varchar(8000)
	}

	[Table(Schema="dbo", Name="Track")]
	public partial class Tracks
	{
		[Column(DbType="int",           DataType=DataType.Int32),                PrimaryKey,  Identity] public int    Id       { get; set; } // int
		[Column(DbType="varchar(8000)", DataType=DataType.VarChar, Length=8000),    Nullable          ] public string Name     { get; set; } // varchar(8000)
		[Column(DbType="int",           DataType=DataType.Int32),                NotNull              ] public int    ArtistId { get; set; } // int
		[Column(DbType="varchar(8000)", DataType=DataType.VarChar, Length=8000),    Nullable          ] public string Album    { get; set; } // varchar(8000)
		[Column(DbType="int",           DataType=DataType.Int32),                NotNull              ] public int    Year     { get; set; } // int
	}

	[Table(Schema="dbo", Name="T_Test")]
	public partial class TTests
	{
		[Column(DbType="int",           DataType=DataType.Int32),                PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column(DbType="nvarchar(100)", DataType=DataType.NVarChar, Length=100), Nullable            ] public string Name { get; set; } // nvarchar(100)
	}

	public static partial class TableExtensions
	{
		public static A1 Find(this ITable<A1> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static A10 Find(this ITable<A10> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static A11 Find(this ITable<A11> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static A2 Find(this ITable<A2> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static A3 Find(this ITable<A3> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static A4 Find(this ITable<A4> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static A5 Find(this ITable<A5> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static A6 Find(this ITable<A6> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static A7 Find(this ITable<A7> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static A8 Find(this ITable<A8> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static A9 Find(this ITable<A9> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Artists Find(this ITable<Artists> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Pocoes Find(this ITable<Pocoes> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Tracks Find(this ITable<Tracks> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TTests Find(this ITable<TTests> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}
